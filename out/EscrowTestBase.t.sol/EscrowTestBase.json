{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ARBITER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARBITER_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BUYER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SALT1",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SALT2",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SELLER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_tokenContract",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0806040523461007a57610dea8181016001600160401b038111838210176100645782916102a9833903906000f08015610058576001600160a01b031660805260405161022990816100808239608051816101040152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c908163109cddef146101a05750806310d7c5951461016e578063614358aa1461013357806361ded4eb146100f05780638d859f3e146100ce578063904cae5c146100b3578063a8fa2987146100985763bca93eba1461007a57600080fd5b346100945781600319360112610094576020905160028152f35b5080fd5b50346100945781600319360112610094576020905160018152f35b50346100945781600319360112610094576020905160038152f35b503461009457816003193601126100945760209051670de0b6b3a76400008152f35b5034610094578160031936011261009457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610094578160031936011261009457806020915182810190631d195cdd60e21b825260048152610164816101c1565b5190209051908152f35b5034610094578160031936011261009457806020915182810190643a32b9ba1960d91b825260058152610164816101c1565b83903461009457816003193601126100945780662386f26fc1000060209252f35b6040810190811067ffffffffffffffff8211176101dd57604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122052b0b697e600b4168c994bc7630fc6eb2a90862f400660a9e40cf57f165ffdcb64736f6c6343000812003360803462000339576040906001600160401b03908083018281118282101762000323578352600981526020916845524332304d6f636b60b81b838301528351928484018481108382111762000323578552600493848152634532304d60e01b828201528351908382116200030e576003928354926001968785811c9516801562000303575b83861014620002ee578190601f9586811162000298575b508390868311600114620002315760009262000225575b505060001982871b1c191690871b1784555b8151948511620002105786548681811c9116801562000205575b82821014620001f057838111620001a5575b50809285116001146200013757509383949184926000956200012b575b50501b92600019911b1c19161790555b51610aab90816200033f8239f35b0151935038806200010d565b92919084601f1981168860005285600020956000905b898383106200018a57505050106200016f575b50505050811b0190556200011d565b01519060f884600019921b161c191690553880808062000160565b8587015189559097019694850194889350908101906200014d565b87600052816000208480880160051c820192848910620001e6575b0160051c019087905b828110620001d9575050620000f0565b60008155018790620001c9565b92508192620001c0565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000de565b604187634e487b7160e01b6000525260246000fd5b015190503880620000b2565b90899350601f1983169188600052856000209260005b8782821062000281575050841162000268575b505050811b018455620000c4565b015160001983891b60f8161c191690553880806200025a565b8385015186558d9790950194938401930162000247565b90915086600052836000208680850160051c820192868610620002e4575b918b91869594930160051c01915b828110620002d45750506200009b565b600081558594508b9101620002c4565b92508192620002b6565b602289634e487b7160e01b6000525260246000fd5b94607f169462000084565b604186634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461069057508163095ea7b31461066657816318160ddd1461064757816323b872dd1461057d578163313ce56714610561578163395093511461051157816340c10f191461044e57816370a082311461041757816395d89b41146102f85781639dc29fac146101d7578163a457c2d71461012f57508063a9059cbb146100ff5763dd62ed3e146100b457600080fd5b346100fb57806003193601126100fb57806020926100d06107b1565b6100d86107cc565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100fb57806003193601126100fb5760209061012861011e6107b1565b6024359033610805565b5160018152f35b905082346101d457826003193601126101d45761014a6107b1565b918360243592338152600160205281812060018060a01b0386168252602052205490828210610183576020856101288585038733610973565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b839150346100fb57826003193601126100fb576101f26107b1565b6001600160a01b0316906024359082156102ab5782845283602052848420549082821061025d57508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b608490602087519162461bcd60e51b8352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152fd5b608490602086519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b8383346100fb57816003193601126100fb57805190828454600181811c9080831692831561040d575b60209384841081146103fa578388529081156103de5750600114610389575b505050829003601f01601f191682019267ffffffffffffffff8411838510176103765750829182610372925282610768565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106103ca5750505050830101858080610340565b8054888601830152930192849082016103b4565b60ff1916878501525050151560051b8401019050858080610340565b634e487b7160e01b895260228a52602489fd5b91607f1691610321565b5050346100fb5760203660031901126100fb5760209181906001600160a01b0361043f6107b1565b16815280845220549051908152f35b9190503461050d578060031936011261050d576104696107b1565b6001600160a01b031691602435919083156104cb57506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926104b187956002546107e2565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b8280fd5b5050346100fb57806003193601126100fb5761012860209261055a6105346107b1565b338352600186528483206001600160a01b038216845286529184902054602435906107e2565b9033610973565b5050346100fb57816003193601126100fb576020905160128152f35b839150346100fb5760603660031901126100fb576105996107b1565b6105a16107cc565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036105db575b602086610128878787610805565b84821061060457509183916105f96020969561012895033383610973565b9193948193506105cd565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100fb57816003193601126100fb576020906002549051908152f35b5050346100fb57806003193601126100fb576020906101286106866107b1565b6024359033610973565b8490843461050d578260031936011261050d5782600354600181811c9080831692831561075e575b60209384841081146103fa578388529081156103de575060011461070857505050829003601f01601f191682019267ffffffffffffffff8411838510176103765750829182610372925282610768565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061074a5750505050830101858080610340565b805488860183015293019284908201610734565b91607f16916106b8565b6020808252825181830181905290939260005b82811061079d57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161077b565b600435906001600160a01b03821682036107c757565b600080fd5b602435906001600160a01b03821682036107c757565b919082018092116107ef57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561092057169182156108cf5760008281528060205260408120549180831061087b57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610a2457169182156109d45760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea26469706673582212201206a6c6ae72cb5f3fac152705dd5dc3ccdbc7138d06eb3fad289b70805638df64736f6c63430008120033",
    "sourceMap": "200:570:32:-:0;;;;;;;745:15;;;;-1:-1:-1;;;;;745:15:32;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;200:570:32;720:41;;200:570;;;;;;;;720:41;200:570;;;;;;745:15;200:570;;;745:15;200:570;;;;;745:15;200:570;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040818152600436101561001457600080fd5b600091823560e01c908163109cddef146101a05750806310d7c5951461016e578063614358aa1461013357806361ded4eb146100f05780638d859f3e146100ce578063904cae5c146100b3578063a8fa2987146100985763bca93eba1461007a57600080fd5b346100945781600319360112610094576020905160028152f35b5080fd5b50346100945781600319360112610094576020905160018152f35b50346100945781600319360112610094576020905160038152f35b503461009457816003193601126100945760209051670de0b6b3a76400008152f35b5034610094578160031936011261009457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610094578160031936011261009457806020915182810190631d195cdd60e21b825260048152610164816101c1565b5190209051908152f35b5034610094578160031936011261009457806020915182810190643a32b9ba1960d91b825260058152610164816101c1565b83903461009457816003193601126100945780662386f26fc1000060209252f35b6040810190811067ffffffffffffffff8211176101dd57604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122052b0b697e600b4168c994bc7630fc6eb2a90862f400660a9e40cf57f165ffdcb64736f6c63430008120033",
    "sourceMap": "200:570:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;379:25;200:570;379:25;;;288:24;200:570;288:24;;;200:570;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:1;200:570;;;;;;;;;;;;;;;;;;;;;;;540:1;200:570;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:4;200:570;;;;;;;;;;;;;;;;;455:39;-1:-1:-1;;;;;200:570:32;;;;;;;;;;;;;;;;;;;;288:24;200:570;;288:24;;;200:570;-1:-1:-1;;;200:570:32;;;288:24;;;;;:::i;:::-;200:570;278:35;;200:570;;;;;;;;;;;;;;;;;;;;379:25;200:570;;379:25;;;200:570;-1:-1:-1;;;200:570:32;;379:25;;;;;;:::i;200:570::-;;;;;;;;;;;;;;;685:4;200:570;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "31754": [
        {
          "start": 260,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ARBITER()": "904cae5c",
    "ARBITER_FEE()": "109cddef",
    "BUYER()": "a8fa2987",
    "PRICE()": "8d859f3e",
    "SALT1()": "614358aa",
    "SALT2()": "10d7c595",
    "SELLER()": "bca93eba",
    "i_tokenContract()": "61ded4eb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ARBITER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARBITER_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BUYER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SALT1\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SALT2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SELLER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_tokenContract\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/EscrowTestBase.t.sol\":\"EscrowTestBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol\":{\"keccak256\":\"0x84e74b44b4a040b78c59f5775b3488568a52b6c444936c7da270d77b8978803a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c3b5d3c0abdf59181985086fa335519b96f3a9489570ee1188fd293b08a7b6f\",\"dweb:/ipfs/Qmey8qcStYDSubZatenoeRoM1ibkpd4nv6Ggdw4sHpct6P\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/EscrowTestBase.t.sol\":{\"keccak256\":\"0xd75664f01cd35f2c5cd41f1d9d5d8e4c14c22871e2def1a885db954a58f0735e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02ba0fdc2a39bfc5da3e7f1e445247e21da5ec5cbc5b4ba40625439ceb7fe7ca\",\"dweb:/ipfs/QmSb16PW4wwoLVXBnYvmjQG2pfi23qdzxM1Xtpgcrmr5hq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ARBITER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ARBITER_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BUYER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SALT1",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SALT2",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SELLER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "i_tokenContract",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/EscrowTestBase.t.sol": "EscrowTestBase"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol": {
        "keccak256": "0x84e74b44b4a040b78c59f5775b3488568a52b6c444936c7da270d77b8978803a",
        "urls": [
          "bzz-raw://0c3b5d3c0abdf59181985086fa335519b96f3a9489570ee1188fd293b08a7b6f",
          "dweb:/ipfs/Qmey8qcStYDSubZatenoeRoM1ibkpd4nv6Ggdw4sHpct6P"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "test/EscrowTestBase.t.sol": {
        "keccak256": "0xd75664f01cd35f2c5cd41f1d9d5d8e4c14c22871e2def1a885db954a58f0735e",
        "urls": [
          "bzz-raw://02ba0fdc2a39bfc5da3e7f1e445247e21da5ec5cbc5b4ba40625439ceb7fe7ca",
          "dweb:/ipfs/QmSb16PW4wwoLVXBnYvmjQG2pfi23qdzxM1Xtpgcrmr5hq"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/EscrowTestBase.t.sol",
    "id": 31790,
    "exportedSymbols": {
      "ERC20Mock": [
        29407
      ],
      "EscrowTestBase": [
        31789
      ],
      "IERC20": [
        30137
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:739:32",
    "nodes": [
      {
        "id": 31716,
        "nodeType": "PragmaDirective",
        "src": "32:23:32",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 31718,
        "nodeType": "ImportDirective",
        "src": "57:70:32",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol",
        "file": "@openzeppelin/contracts/mocks/ERC20Mock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31790,
        "sourceUnit": 29408,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31717,
              "name": "ERC20Mock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29407,
              "src": "65:9:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31720,
        "nodeType": "ImportDirective",
        "src": "128:70:32",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31790,
        "sourceUnit": 30138,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31719,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30137,
              "src": "136:6:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31789,
        "nodeType": "ContractDefinition",
        "src": "200:570:32",
        "nodes": [
          {
            "id": 31734,
            "nodeType": "VariableDeclaration",
            "src": "230:85:32",
            "nodes": [],
            "constant": true,
            "functionSelector": "614358aa",
            "mutability": "constant",
            "name": "SALT1",
            "nameLocation": "254:5:32",
            "scope": 31789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 31721,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "230:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "74657374",
                              "id": 31729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "305:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                                "typeString": "literal_string \"test\""
                              },
                              "value": "test"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                                "typeString": "literal_string \"test\""
                              }
                            ],
                            "expression": {
                              "id": 31727,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "288:3:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 31728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "292:12:32",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "288:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 31730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "288:24:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 31726,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "278:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 31731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "278:35:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    ],
                    "id": 31725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "270:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 31724,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "270:7:32",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 31732,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "270:44:32",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 31723,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "262:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 31722,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "262:7:32",
                  "typeDescriptions": {}
                }
              },
              "id": 31733,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "262:53:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31748,
            "nodeType": "VariableDeclaration",
            "src": "321:86:32",
            "nodes": [],
            "constant": true,
            "functionSelector": "10d7c595",
            "mutability": "constant",
            "name": "SALT2",
            "nameLocation": "345:5:32",
            "scope": 31789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 31735,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "321:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "7465737432",
                              "id": 31743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "396:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4da432f1ecd4c0ac028ebde3a3f78510a21d54087b161590a63080d33b702b8d",
                                "typeString": "literal_string \"test2\""
                              },
                              "value": "test2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4da432f1ecd4c0ac028ebde3a3f78510a21d54087b161590a63080d33b702b8d",
                                "typeString": "literal_string \"test2\""
                              }
                            ],
                            "expression": {
                              "id": 31741,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "379:3:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 31742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "383:12:32",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "379:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 31744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "379:25:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 31740,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "369:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 31745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "369:36:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    ],
                    "id": 31739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "361:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 31738,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "361:7:32",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 31746,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "361:45:32",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 31737,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "353:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 31736,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:7:32",
                  "typeDescriptions": {}
                }
              },
              "id": 31747,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "353:54:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31751,
            "nodeType": "VariableDeclaration",
            "src": "413:36:32",
            "nodes": [],
            "constant": true,
            "functionSelector": "8d859f3e",
            "mutability": "constant",
            "name": "PRICE",
            "nameLocation": "437:5:32",
            "scope": 31789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31749,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "413:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 31750,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "445:4:32",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 31754,
            "nodeType": "VariableDeclaration",
            "src": "455:39:32",
            "nodes": [],
            "constant": false,
            "functionSelector": "61ded4eb",
            "mutability": "immutable",
            "name": "i_tokenContract",
            "nameLocation": "479:15:32",
            "scope": 31789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$30137",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 31753,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31752,
                "name": "IERC20",
                "nameLocations": [
                  "455:6:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30137,
                "src": "455:6:32"
              },
              "referencedDeclaration": 30137,
              "src": "455:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30137",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31760,
            "nodeType": "VariableDeclaration",
            "src": "500:42:32",
            "nodes": [],
            "constant": true,
            "functionSelector": "a8fa2987",
            "mutability": "constant",
            "name": "BUYER",
            "nameLocation": "524:5:32",
            "scope": 31789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31755,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "500:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 31758,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "540:1:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 31757,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "532:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 31756,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "532:7:32",
                  "typeDescriptions": {}
                }
              },
              "id": 31759,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "532:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31766,
            "nodeType": "VariableDeclaration",
            "src": "548:43:32",
            "nodes": [],
            "constant": true,
            "functionSelector": "bca93eba",
            "mutability": "constant",
            "name": "SELLER",
            "nameLocation": "572:6:32",
            "scope": 31789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31761,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "32",
                  "id": 31764,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "589:1:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  }
                ],
                "id": 31763,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "581:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 31762,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:7:32",
                  "typeDescriptions": {}
                }
              },
              "id": 31765,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "581:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31772,
            "nodeType": "VariableDeclaration",
            "src": "597:44:32",
            "nodes": [],
            "constant": true,
            "functionSelector": "904cae5c",
            "mutability": "constant",
            "name": "ARBITER",
            "nameLocation": "621:7:32",
            "scope": 31789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31767,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:32",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "33",
                  "id": 31770,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "639:1:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  }
                ],
                "id": 31769,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "631:7:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 31768,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "631:7:32",
                  "typeDescriptions": {}
                }
              },
              "id": 31771,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "631:10:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31775,
            "nodeType": "VariableDeclaration",
            "src": "647:42:32",
            "nodes": [],
            "constant": true,
            "functionSelector": "109cddef",
            "mutability": "constant",
            "name": "ARBITER_FEE",
            "nameLocation": "671:11:32",
            "scope": 31789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31773,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "647:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653136",
              "id": 31774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "685:4:32",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "1e16"
            },
            "visibility": "public"
          },
          {
            "id": 31788,
            "nodeType": "FunctionDefinition",
            "src": "696:72:32",
            "nodes": [],
            "body": {
              "id": 31787,
              "nodeType": "Block",
              "src": "710:58:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31778,
                      "name": "i_tokenContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31754,
                      "src": "720:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$30137",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "745:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Mock_$29407_$",
                              "typeString": "function () returns (contract ERC20Mock)"
                            },
                            "typeName": {
                              "id": 31781,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 31780,
                                "name": "ERC20Mock",
                                "nameLocations": [
                                  "749:9:32"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 29407,
                                "src": "749:9:32"
                              },
                              "referencedDeclaration": 29407,
                              "src": "749:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mock_$29407",
                                "typeString": "contract ERC20Mock"
                              }
                            }
                          },
                          "id": 31783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "745:15:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$29407",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$29407",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 31779,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30137,
                        "src": "738:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$30137_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 31784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "738:23:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$30137",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "720:41:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30137",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 31786,
                  "nodeType": "ExpressionStatement",
                  "src": "720:41:32"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:2:32"
            },
            "returnParameters": {
              "id": 31777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:32"
            },
            "scope": 31789,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EscrowTestBase",
        "contractDependencies": [
          29407
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31789
        ],
        "name": "EscrowTestBase",
        "nameLocation": "209:14:32",
        "scope": 31790,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 32
}